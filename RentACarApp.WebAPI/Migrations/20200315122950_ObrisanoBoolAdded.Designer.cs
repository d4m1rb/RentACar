// <auto-generated />
using System;
using RentACarApp.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace RentACarApp.WebAPI.Migrations
{
    [DbContext(typeof(RentACarAppContext))]
    [Migration("20200315122950_ObrisanoBoolAdded")]
    partial class ObrisanoBoolAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Automobil", b =>
                {
                    b.Property<int>("AutomobilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutomobilID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Boja")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("BrojSjedista")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("BrojVrata")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<decimal>("CijenaIznajmljivanja");

                    b.Property<decimal>("CijenaKaskoOsiguranja");

                    b.Property<bool>("Dostupan");

                    b.Property<string>("EmisioniStandard")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("GodinaProizvodnje");

                    b.Property<string>("Gorivo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID");

                    b.Property<string>("Kubikaza")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("ModelId")
                        .HasColumnName("ModelID");

                    b.Property<bool>("Novo");

                    b.Property<string>("Potrosnja")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<string>("SnagaMotora")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Transmisija")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("AutomobilId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("ModelId");

                    b.ToTable("Automobil");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PostanskiBroj")
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.KategorijaVozila", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis");

                    b.HasKey("KategorijaId");

                    b.ToTable("KategorijaVozila");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KlijentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KlijentId");

                    b.HasIndex("GradId");

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DatumRegistracije");

                    b.Property<DateTime?>("DatumRodjenja");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisniciUlogeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisniciUlogeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisniciUlogeId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ModelID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ProizvodjacId")
                        .HasColumnName("ProizvodjacID");

                    b.HasKey("ModelId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEvidentiranja")
                        .HasColumnType("datetime");

                    b.Property<string>("Napomena");

                    b.Property<int>("Ocjena1")
                        .HasColumnName("Ocjena");

                    b.Property<int>("RezervacijaRentanjaId")
                        .HasColumnName("RezervacijaRentanjaID");

                    b.HasKey("OcjenaId");

                    b.HasIndex("RezervacijaRentanjaId");

                    b.ToTable("Ocjena");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Poruka", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PorukaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("ObrisanoKorisnik");

                    b.Property<bool>("ObrisanoUposlenik");

                    b.Property<string>("Posiljaoc")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Procitano");

                    b.Property<int>("RezervacijaRentanjaId")
                        .HasColumnName("RezervacijaRentanjaID");

                    b.Property<string>("Sadrzaj")
                        .IsRequired();

                    b.Property<int>("UposlenikId")
                        .HasColumnName("UposlenikID");

                    b.HasKey("PorukaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("RezervacijaRentanjaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Proizvodjac", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProizvodjacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("Slika");

                    b.HasKey("ProizvodjacId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Proizvodjac");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RacunID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("datetime");

                    b.Property<decimal>("UkupanIznos");

                    b.HasKey("RacunId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.RegistracijaVozila", b =>
                {
                    b.Property<int>("RegistracijaVozilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegistracijaVozilaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomobilId")
                        .HasColumnName("AutomobilID");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("RegistarskeOznake")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Status");

                    b.Property<string>("Trajanje")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("UkupanIznos");

                    b.Property<int>("UposlenikId")
                        .HasColumnName("UposlenikID");

                    b.Property<DateTime>("VaziDo")
                        .HasColumnType("datetime");

                    b.HasKey("RegistracijaVozilaId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("RegistracijaVozila");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.RezervacijaRentanja", b =>
                {
                    b.Property<int>("RezervacijaRentanjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaRentanjaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomobilId")
                        .HasColumnName("AutomobilID");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Iznos");

                    b.Property<decimal?>("IznosSaPopustom");

                    b.Property<bool>("KaskoOsiguranje");

                    b.Property<int>("KlijentId")
                        .HasColumnName("KlijentID");

                    b.Property<string>("LokacijaPreuzimanja")
                        .HasMaxLength(100);

                    b.Property<string>("Opis");

                    b.Property<bool>("Otkazana");

                    b.Property<double>("Popust");

                    b.Property<int>("RacunId")
                        .HasColumnName("RacunID");

                    b.Property<DateTime>("RezervacijaDo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RezervacijaOd")
                        .HasColumnType("datetime");

                    b.Property<bool>("VracanjeUposlovnicu")
                        .HasColumnName("VracanjeUPoslovnicu");

                    b.HasKey("RezervacijaRentanjaId");

                    b.HasIndex("AutomobilId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("RacunId");

                    b.ToTable("RezervacijaRentanja");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Automobil", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.KategorijaVozila", "Kategorija")
                        .WithMany("Automobil")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Automobil_KategorijaID");

                    b.HasOne("RentACarApp.WebAPI.Database.Model", "Model")
                        .WithMany("Automobil")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK_Automobil_ModelID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Grad", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Grad")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Klijent", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Grad", "Grad")
                        .WithMany("Klijent")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_GradID");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Grad", "Grad")
                        .WithMany("Korisnici")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_User_Grad_GradID");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_UserRole_User_UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RentACarApp.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_UserRole_Role_RoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Model", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Proizvodjac", "Proizvodjac")
                        .WithMany("Model")
                        .HasForeignKey("ProizvodjacId")
                        .HasConstraintName("FK_Model_ProizvodjacID");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Ocjena", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.RezervacijaRentanja", "RezervacijaRentanja")
                        .WithMany("Ocjena")
                        .HasForeignKey("RezervacijaRentanjaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Poruka", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Klijent", "Klijent")
                        .WithMany("Poruka")
                        .HasForeignKey("KlijentId");

                    b.HasOne("RentACarApp.WebAPI.Database.RezervacijaRentanja", "RezervacijaRentanja")
                        .WithMany("Poruka")
                        .HasForeignKey("RezervacijaRentanjaId")
                        .HasConstraintName("FK_Poruka_RezervacijaRentanjaID");

                    b.HasOne("RentACarApp.WebAPI.Database.Korisnici", "Uposlenik")
                        .WithMany("Poruka")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_Poruka_UposlenikID");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.Proizvodjac", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Proizvodjac")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.RegistracijaVozila", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Automobil", "Automobil")
                        .WithMany("RegistracijaVozila")
                        .HasForeignKey("AutomobilId")
                        .HasConstraintName("FK_Registracija_AutomobilID");

                    b.HasOne("RentACarApp.WebAPI.Database.Korisnici", "Uposlenik")
                        .WithMany("RegistracijaVozila")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_RegistracijaVozila_UposlenikID");
                });

            modelBuilder.Entity("RentACarApp.WebAPI.Database.RezervacijaRentanja", b =>
                {
                    b.HasOne("RentACarApp.WebAPI.Database.Automobil", "Automobil")
                        .WithMany("RezervacijaRentanja")
                        .HasForeignKey("AutomobilId")
                        .HasConstraintName("FK_RezervacijaRentanja_AutomobilID");

                    b.HasOne("RentACarApp.WebAPI.Database.Klijent", "Klijent")
                        .WithMany("RezervacijaRentanja")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_RezervacijaRentanja_KlijentID");

                    b.HasOne("RentACarApp.WebAPI.Database.Racun", "Racun")
                        .WithMany("RezervacijaRentanja")
                        .HasForeignKey("RacunId")
                        .HasConstraintName("FK_RezervacijaRentanja_RacunID");
                });
#pragma warning restore 612, 618
        }
    }
}
